Starting... 
2024-05-15 15:28:07.668153: Using splits from existing split file: /home/ubuntu/Desktop/nnFormer/nnformer/DATASET/nnFormer_raw/nnFormer_preprocessed/Task003_tumor/splits_final.pkl 
2024-05-15 15:28:07.669075: The split file contains 5 splits. 
2024-05-15 15:28:07.669145: Desired fold for training: 0 
2024-05-15 15:28:07.669188: This split has 387 training and 97 validation cases. 
2024-05-15 15:28:07.792198: TRAINING KEYS:
 odict_keys(['BRATS_001', 'BRATS_002', 'BRATS_003', 'BRATS_004', 'BRATS_005', 'BRATS_006', 'BRATS_007', 'BRATS_008', 'BRATS_009', 'BRATS_013', 'BRATS_014', 'BRATS_015', 'BRATS_016', 'BRATS_017', 'BRATS_019', 'BRATS_021', 'BRATS_022', 'BRATS_023', 'BRATS_024', 'BRATS_025', 'BRATS_026', 'BRATS_027', 'BRATS_030', 'BRATS_031', 'BRATS_033', 'BRATS_035', 'BRATS_036', 'BRATS_037', 'BRATS_038', 'BRATS_039', 'BRATS_040', 'BRATS_043', 'BRATS_044', 'BRATS_045', 'BRATS_046', 'BRATS_048', 'BRATS_050', 'BRATS_051', 'BRATS_052', 'BRATS_054', 'BRATS_055', 'BRATS_058', 'BRATS_059', 'BRATS_060', 'BRATS_061', 'BRATS_062', 'BRATS_063', 'BRATS_064', 'BRATS_065', 'BRATS_066', 'BRATS_068', 'BRATS_070', 'BRATS_071', 'BRATS_072', 'BRATS_073', 'BRATS_074', 'BRATS_075', 'BRATS_076', 'BRATS_077', 'BRATS_078', 'BRATS_079', 'BRATS_080', 'BRATS_081', 'BRATS_082', 'BRATS_083', 'BRATS_084', 'BRATS_087', 'BRATS_089', 'BRATS_090', 'BRATS_092', 'BRATS_093', 'BRATS_094', 'BRATS_095', 'BRATS_096', 'BRATS_097', 'BRATS_099', 'BRATS_103', 'BRATS_105', 'BRATS_106', 'BRATS_107', 'BRATS_108', 'BRATS_109', 'BRATS_110', 'BRATS_112', 'BRATS_113', 'BRATS_114', 'BRATS_115', 'BRATS_117', 'BRATS_118', 'BRATS_119', 'BRATS_120', 'BRATS_121', 'BRATS_122', 'BRATS_123', 'BRATS_124', 'BRATS_125', 'BRATS_126', 'BRATS_127', 'BRATS_128', 'BRATS_129', 'BRATS_130', 'BRATS_131', 'BRATS_132', 'BRATS_133', 'BRATS_134', 'BRATS_137', 'BRATS_139', 'BRATS_140', 'BRATS_141', 'BRATS_142', 'BRATS_143', 'BRATS_144', 'BRATS_146', 'BRATS_147', 'BRATS_148', 'BRATS_150', 'BRATS_151', 'BRATS_152', 'BRATS_153', 'BRATS_154', 'BRATS_156', 'BRATS_160', 'BRATS_161', 'BRATS_162', 'BRATS_165', 'BRATS_166', 'BRATS_167', 'BRATS_168', 'BRATS_170', 'BRATS_171', 'BRATS_172', 'BRATS_173', 'BRATS_174', 'BRATS_175', 'BRATS_177', 'BRATS_178', 'BRATS_179', 'BRATS_180', 'BRATS_182', 'BRATS_185', 'BRATS_186', 'BRATS_188', 'BRATS_189', 'BRATS_190', 'BRATS_191', 'BRATS_193', 'BRATS_194', 'BRATS_195', 'BRATS_196', 'BRATS_197', 'BRATS_199', 'BRATS_200', 'BRATS_201', 'BRATS_202', 'BRATS_203', 'BRATS_204', 'BRATS_205', 'BRATS_206', 'BRATS_209', 'BRATS_210', 'BRATS_211', 'BRATS_212', 'BRATS_213', 'BRATS_214', 'BRATS_215', 'BRATS_216', 'BRATS_217', 'BRATS_219', 'BRATS_221', 'BRATS_222', 'BRATS_223', 'BRATS_225', 'BRATS_226', 'BRATS_227', 'BRATS_228', 'BRATS_229', 'BRATS_231', 'BRATS_232', 'BRATS_233', 'BRATS_234', 'BRATS_235', 'BRATS_236', 'BRATS_237', 'BRATS_238', 'BRATS_239', 'BRATS_240', 'BRATS_241', 'BRATS_242', 'BRATS_243', 'BRATS_244', 'BRATS_245', 'BRATS_246', 'BRATS_247', 'BRATS_248', 'BRATS_249', 'BRATS_250', 'BRATS_251', 'BRATS_252', 'BRATS_253', 'BRATS_254', 'BRATS_255', 'BRATS_256', 'BRATS_257', 'BRATS_258', 'BRATS_259', 'BRATS_260', 'BRATS_261', 'BRATS_262', 'BRATS_263', 'BRATS_264', 'BRATS_265', 'BRATS_266', 'BRATS_267', 'BRATS_268', 'BRATS_269', 'BRATS_270', 'BRATS_272', 'BRATS_273', 'BRATS_274', 'BRATS_275', 'BRATS_276', 'BRATS_277', 'BRATS_278', 'BRATS_279', 'BRATS_280', 'BRATS_281', 'BRATS_283', 'BRATS_285', 'BRATS_286', 'BRATS_288', 'BRATS_289', 'BRATS_294', 'BRATS_295', 'BRATS_296', 'BRATS_297', 'BRATS_298', 'BRATS_299', 'BRATS_301', 'BRATS_302', 'BRATS_303', 'BRATS_304', 'BRATS_306', 'BRATS_307', 'BRATS_308', 'BRATS_309', 'BRATS_310', 'BRATS_312', 'BRATS_313', 'BRATS_315', 'BRATS_316', 'BRATS_317', 'BRATS_318', 'BRATS_319', 'BRATS_320', 'BRATS_322', 'BRATS_323', 'BRATS_324', 'BRATS_325', 'BRATS_326', 'BRATS_327', 'BRATS_330', 'BRATS_331', 'BRATS_332', 'BRATS_333', 'BRATS_334', 'BRATS_336', 'BRATS_337', 'BRATS_338', 'BRATS_339', 'BRATS_340', 'BRATS_341', 'BRATS_342', 'BRATS_344', 'BRATS_345', 'BRATS_346', 'BRATS_347', 'BRATS_348', 'BRATS_349', 'BRATS_352', 'BRATS_353', 'BRATS_354', 'BRATS_355', 'BRATS_357', 'BRATS_358', 'BRATS_359', 'BRATS_360', 'BRATS_361', 'BRATS_362', 'BRATS_363', 'BRATS_364', 'BRATS_365', 'BRATS_368', 'BRATS_369', 'BRATS_370', 'BRATS_371', 'BRATS_372', 'BRATS_373', 'BRATS_375', 'BRATS_380', 'BRATS_381', 'BRATS_382', 'BRATS_383', 'BRATS_385', 'BRATS_387', 'BRATS_388', 'BRATS_389', 'BRATS_390', 'BRATS_391', 'BRATS_392', 'BRATS_393', 'BRATS_395', 'BRATS_396', 'BRATS_397', 'BRATS_399', 'BRATS_401', 'BRATS_402', 'BRATS_403', 'BRATS_404', 'BRATS_405', 'BRATS_406', 'BRATS_407', 'BRATS_408', 'BRATS_409', 'BRATS_410', 'BRATS_411', 'BRATS_412', 'BRATS_413', 'BRATS_414', 'BRATS_415', 'BRATS_416', 'BRATS_417', 'BRATS_418', 'BRATS_419', 'BRATS_420', 'BRATS_421', 'BRATS_422', 'BRATS_423', 'BRATS_424', 'BRATS_425', 'BRATS_426', 'BRATS_427', 'BRATS_428', 'BRATS_429', 'BRATS_430', 'BRATS_431', 'BRATS_433', 'BRATS_434', 'BRATS_435', 'BRATS_436', 'BRATS_438', 'BRATS_439', 'BRATS_440', 'BRATS_441', 'BRATS_442', 'BRATS_443', 'BRATS_444', 'BRATS_447', 'BRATS_448', 'BRATS_449', 'BRATS_451', 'BRATS_453', 'BRATS_454', 'BRATS_455', 'BRATS_456', 'BRATS_457', 'BRATS_458', 'BRATS_459', 'BRATS_461', 'BRATS_462', 'BRATS_463', 'BRATS_464', 'BRATS_465', 'BRATS_466', 'BRATS_467', 'BRATS_468', 'BRATS_469', 'BRATS_471', 'BRATS_474', 'BRATS_475', 'BRATS_476', 'BRATS_477', 'BRATS_478', 'BRATS_479', 'BRATS_480', 'BRATS_481', 'BRATS_483', 'BRATS_484']) 
2024-05-15 15:28:07.792361: VALIDATION KEYS:
 odict_keys(['BRATS_010', 'BRATS_011', 'BRATS_012', 'BRATS_018', 'BRATS_020', 'BRATS_028', 'BRATS_029', 'BRATS_032', 'BRATS_034', 'BRATS_041', 'BRATS_042', 'BRATS_047', 'BRATS_049', 'BRATS_053', 'BRATS_056', 'BRATS_057', 'BRATS_067', 'BRATS_069', 'BRATS_085', 'BRATS_086', 'BRATS_088', 'BRATS_091', 'BRATS_098', 'BRATS_100', 'BRATS_101', 'BRATS_102', 'BRATS_104', 'BRATS_111', 'BRATS_116', 'BRATS_135', 'BRATS_136', 'BRATS_138', 'BRATS_145', 'BRATS_149', 'BRATS_155', 'BRATS_157', 'BRATS_158', 'BRATS_159', 'BRATS_163', 'BRATS_164', 'BRATS_169', 'BRATS_176', 'BRATS_181', 'BRATS_183', 'BRATS_184', 'BRATS_187', 'BRATS_192', 'BRATS_198', 'BRATS_207', 'BRATS_208', 'BRATS_218', 'BRATS_220', 'BRATS_224', 'BRATS_230', 'BRATS_271', 'BRATS_282', 'BRATS_284', 'BRATS_287', 'BRATS_290', 'BRATS_291', 'BRATS_292', 'BRATS_293', 'BRATS_300', 'BRATS_305', 'BRATS_311', 'BRATS_314', 'BRATS_321', 'BRATS_328', 'BRATS_329', 'BRATS_335', 'BRATS_343', 'BRATS_350', 'BRATS_351', 'BRATS_356', 'BRATS_366', 'BRATS_367', 'BRATS_374', 'BRATS_376', 'BRATS_377', 'BRATS_378', 'BRATS_379', 'BRATS_384', 'BRATS_386', 'BRATS_394', 'BRATS_398', 'BRATS_400', 'BRATS_432', 'BRATS_437', 'BRATS_445', 'BRATS_446', 'BRATS_450', 'BRATS_452', 'BRATS_460', 'BRATS_470', 'BRATS_472', 'BRATS_473', 'BRATS_482']) 
2024-05-15 15:28:09.612394: lr: 0.01 
2024-05-15 15:28:12.712936: Unable to plot network architecture: 
2024-05-15 15:28:12.713669: No module named 'hiddenlayer' 
2024-05-15 15:28:12.715683: 
printing the network instead:
 
2024-05-15 15:28:12.716078: Generic_UNet(
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(4, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (1): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(64, 32, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 4, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(256, 4, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(128, 4, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(64, 4, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(32, 4, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
) 
2024-05-15 15:28:12.719343: 
 
2024-05-15 15:28:12.719619: 
epoch:  0 
